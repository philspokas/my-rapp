# Build and Deploy React app for deployment

variables:
  CI: 'true'
  TEST_REPORT_PATH: './results'

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

# npm test fails on windows-2019
#  vmImage: 'windows-2019'

stages:
- stage: Build

  jobs:
  - job: build
    steps:

# - task: NodeTool@0
#   inputs:
#     versionSpec: '10.x'
#   displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'npm install'

    - script: |
        mkdir $(TEST_REPORT_PATH)
        npm run test --coverage
      displayName: 'npm test'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(TEST_REPORT_PATH)/test-report.xml'

    - script: |
        npm run build
      displayName: 'npm build'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/build.zip'
        replaceExistingArchive: true'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: 'drop'
        publishLocation: 'Container'


- stage: Deploy_Dev

  jobs:
  - job: deploy
    steps:

    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy Azure App Service'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'samplecrm-mspartner'
        appType: 'webApp'
        WebAppName: 'samplecrm-myrapp'
        package: '$(System.DefaultWorkingDirectory)/drop/build.zip'
        enableCustomDeployment: true
        DeploymentType: 'zipDeploy'
        TakeAppOfflineFlag: false

    - powershell: |
        $response = Invoke-WebRequest $(appservice.AppServiceApplicationUrl)
        if ($response.StatusCode -eq 200) {
          exit 0
        }
        else {
          $response
          exit $response.StatusCode
        }
      displayName: 'PowerShell Script'




- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'samplecrm-mspartner'
    appType: 'webApp'
    WebAppName: 'samplecrm-myrapp'
    packageForLinux: '$(System.DefaultWorkingDirectory)/drop/build.zip'
    enableCustomDeployment: true
    DeploymentType: 'zipDeploy'
    TakeAppOfflineFlag: false
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  
  jobs:
  - job: build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'npm install'

    - script: |
        npm run test
      displayName: 'npm test -- --coverage'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'

    - script: |
        npm run build
      displayName: 'npm build'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/build'
        ArtifactName: 'drop'
        publishLocation: 'Container'


- stage: Deploy_Dev

  jobs:
  - job: deploy
    steps:

    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy Azure App Service'
      inputs:
        azureSubscription: 'samplecrm-mspartner'
        appType: 'Web App on Windows'
        WebAppName: 'samplecrm-myrapp'
        packageForLinux: '$(System.DefaultWorkingDirectory)/drop'
    
    - powershell: |
        $response = Invoke-WebRequest $(appservice.AppServiceApplicationUrl)
        if ($response.StatusCode -eq 200) {
          exit 0
        }
        else {
          $response
          exit $response.StatusCode
        }
      displayName: 'PowerShell Script'

  
      